// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using TikTokLIVECleaner;
//
//    var tikTokLiveCleaner = TikTokLiveCleaner.FromJson(jsonString);

namespace TikTokLIVECleaner
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class TikTokLiveCleaner
    {
        [JsonProperty("welcome", NullValueHandling = NullValueHandling.Ignore)]
        public virtual string Welcome { get; set; }

        [JsonProperty("color", NullValueHandling = NullValueHandling.Ignore)]
        public virtual string Color { get; set; }
    }

    public partial class TikTokLiveCleaner
    {
        public static TikTokLiveCleaner FromJson(string json) => JsonConvert.DeserializeObject<TikTokLiveCleaner>(json, TikTokLIVECleaner.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this TikTokLiveCleaner self) => JsonConvert.SerializeObject(self, TikTokLIVECleaner.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
